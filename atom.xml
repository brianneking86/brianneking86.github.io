<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Bri's Blog]]></title>
  <link href="http://brianneking86.github.io/atom.xml" rel="self"/>
  <link href="http://brianneking86.github.io/"/>
  <updated>2014-12-02T00:34:30-05:00</updated>
  <id>http://brianneking86.github.io/</id>
  <author>
    <name><![CDATA[Brianne King]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Using AJAX With Conditions]]></title>
    <link href="http://brianneking86.github.io/blog/2014/12/01/using-ajax-with-conditions/"/>
    <updated>2014-12-01T23:30:16-05:00</updated>
    <id>http://brianneking86.github.io/blog/2014/12/01/using-ajax-with-conditions</id>
    <content type="html"><![CDATA[<p>So Javascript week was a tough week, to say the least. I felt like I had no idea what I was doing which I guess I expected to be used to by then. At least when learning the ever so wonderful Ruby, it gives you error messages that mean something. Seeing the words &ldquo;undefined is not a function&rdquo; is one of the most infuriating things ever in life and thats if you only see it once! Seeing it every 5 seconds slowly picked away at my will to live or at least to continue coding.</p>

<p>For some reason that I don&rsquo;t understand, at some point during the week things started to make a little bit of sense. By the end of the week, I had a vague idea that I maybe kind of had an inkling of what to do. Of course, all of this meant that I was inevitably going to get super determined to figure out something difficult on my own to prove that I wasn&rsquo;t a total moron. In the case of Javascript I found my &ldquo;something difficult&rdquo; during the rails task-lister lab. I created the basic setup with lists that have many tasks and then added boards that have many lists. On the board index page each &lsquo;div&rsquo; would be for a board and the line items in that &lsquo;div&rsquo; would be the lists associated with the board. Seems simple.</p>

<p style="text-align:center;"> <img src="https://raw.githubusercontent.com/brianneking86/brianneking86.github.io/source/source/images/board_index.png" title="Board Index Page" alt="alt text" /></p>

<p>On the board show page each &lsquo;div&rsquo; would be a list that belonged to the board and the line items would be the tasks associated with that list.</p>

<p style="text-align:center;"> <img src="https://raw.githubusercontent.com/brianneking86/brianneking86.github.io/source/source/images/board_show.png" title="Board Show Page" alt="alt text" /></p>

<p>This presented a problem if I wanted to be able to add a list from either page. On the board index page, a list would get appended as a line item but on the board show page it would get appended as a whole div with the potential for line items. I had checked out Trello to make sure I wasn&rsquo;t crazy and that it was possible but it was set up in a way that would have dealt with the issue so of course that meant that my best bet on getting an answer was Steven, poor guy.</p>

<p>Of course I grabbed him on his way out the door to freedom and he kindly (if not somewhat begrudgingly) offered to help out. I poorly explained the situation to him (probably about as well as above) and thankfully he understood and explained that the solution was actually not as difficult as I thought. After persisting the new list to the database, the next stop along the way is the create.js.erb file where I just had to create a condition statement that would check the page for specific css elements. To break that down a little bit more, check the page for either something specific to the board index page that won&rsquo;t be found on the board show page, if it finds that element then render one html.erb template otherwise render a different template. Doesn&rsquo;t sound too hard, right?!</p>

<p>This time amazingly it wasn&rsquo;t. My initial create.js.erb file looked like this.</p>

<p style="text-align:center;"> <img src="https://raw.githubusercontent.com/brianneking86/brianneking86.github.io/source/source/images/original.png" title="Board Index Page" alt="alt text" /></p>

<p>Using the method .length in javascript on a certain css selector will allow you to see if that element is anywhere to be found. All you need to do is check the &ldquo;.length&rdquo; of a certain element and then render the correct partial. Once I added my conditional, it looks like this.</p>

<p style="text-align:center;"> <img src="https://raw.githubusercontent.com/brianneking86/brianneking86.github.io/source/source/images/updated.png" title="Board Index Page" alt="alt text" /></p>

<p>Adding five lines of code and one additional partial that I called &ldquo;_board_list.html.erb&rdquo; I had my answer. The &ldquo;board_list.html.erb&rdquo; partial contains one simple &lsquo;li&rsquo; line of html. The original &ldquo;list.html.erb&rdquo; contained the html for the &lsquo;div&rsquo; and didn&rsquo;t need to be modified at all.</p>

<p>Honestly the most important thing I learned in all of this is that just because something seems really difficult doesn&rsquo;t mean it is and mostly figuring out the right question to ask is the hardest part. If I wanted to do it, there&rsquo;s a pretty good chance someone else had the same idea at some point and figured out a way. There is so much more to learn of the wonders of javascript/ajax and while I still lovingly refer to the language as &ldquo;code vomit on the screen&rdquo;, I&rsquo;m actually totally motivated to learn more :)</p>

<p style="text-align:center;"> <img src="https://raw.githubusercontent.com/brianneking86/brianneking86.github.io/source/source/images/200.gif" title="Board Index Page" alt="alt text" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[My Three Saviors So Far]]></title>
    <link href="http://brianneking86.github.io/blog/2014/10/14/my-saviors/"/>
    <updated>2014-10-14T15:30:32-04:00</updated>
    <id>http://brianneking86.github.io/blog/2014/10/14/my-saviors</id>
    <content type="html"><![CDATA[<p>One of the quotes I have heard/seen most often at Flatiron is &ldquo;You will never know less than you know right now.&rdquo; Personally, one of the first lessons I learned after starting to code is that asking for help/needing help doesn&rsquo;t mean you&rsquo;re stupid. It means you&rsquo;re learning something challenging. That being said, it can be incredibly frustrating when you&rsquo;re pretty sure you&rsquo;re smart but you just can&rsquo;t seem to get past one stupid line of code in a lab!</p>

<p>While struggling through my first two and a half weeks here at Flatiron I am grateful to have found a few resources that have become my saviors (aside from the TA&rsquo;s and fellow classmates of course!) <strong> - Rubular.com, binding.pry and www.ruby-doc.org </strong></p>

<hr />

<p style="text-align:center;"> <strong> Rubular.com </strong></p>

<p style="text-align:center;"> <img src="https://raw.githubusercontent.com/brianneking86/brianneking86.github.io/source/source/images/rubular.png" title="Rubular website" alt="alt text" /></p>

<p>Rubular.com helped me defeat what was one of my first enemies here at Flatiron - <strong>Regex!</strong> Oh how I hated regex when I first started with it. It took multiple sit downs with TA&rsquo;s, watching lab reviews, and sitting down at home with Rubular and the advanced regex lab to finally gain understanding. It was brutal. Especially since I know I am far from really having mastered it.</p>

<p>The site itself is simple to use. You enter your test strings and then try out different combinations of characters and symbols as defined in the quick reference provided until you have properly matched what you wanted to without matching things you didn&rsquo;t want to. Sounds super simple right? HA!</p>

<p>I was willing to persevere and tried what felt like a million different combinations. Finally after an unreasonable amount of time, I managed to get to something that worked and wasn&rsquo;t an eyesore. Below is Rubular filled in with the test strings and my regex for the advanced regex hashtag lab.</p>

<p style="text-align:center;"> <img src="https://raw.githubusercontent.com/brianneking86/brianneking86.github.io/source/source/images/rubular_filled.png" title="Rubular website" alt="alt text" /></p>

<p>I&rsquo;ve seen some intense regex online and it still scares the crap out of me but with Rubular.com, I have hope!!</p>

<hr />

<p style="text-align:center;"> <strong>Binding.pry</strong></p>

<p style="text-align:center;"> <img src="https://raw.githubusercontent.com/brianneking86/brianneking86.github.io/source/source/images/bindingpry.png" title="binding.pry1" alt="alt text" /></p>

<p>My start with programming was really with VisualBasic but outside of a company that is largely based in Excel it&rsquo;s not really good for much. However, its debugging is fantastic. You can step through your code line by line and see exactly what it&rsquo;s doing to pinpoint your problem. When starting with Ruby, I didn&rsquo;t know of anyway to do that (or something similar) and it was yet another frustration in each lab I did. Then one glorious day, I learned of binding.pry and how to use it.</p>

<p>Basically when you need to look more closely at a method, iteration, etc you can simply enter &ldquo;binding.pry&rdquo; where appropriate, for example within the block of a .each iteration (as shown above). When you run your code or rspec it will stop the code at that line, display it in your command line and allow you to poke around. The pigeon organizer was especially frustrating in regard to knowing where I was in my hash to get at the values I needed.</p>

<p style="text-align:center;"> <img src="https://raw.githubusercontent.com/brianneking86/brianneking86.github.io/source/source/images/bindingpry2.png" title="binding.pry2" alt="alt text" /></p>

<p>As in the image above, I was able to type in pigeon to get its value from that iteration. From there I can try out all different lines of code right there to find what isn&rsquo;t working and how to fix it! It&rsquo;s a phenomenal tool for debugging when you are lost about what level of a nested structure you&rsquo;re in or what the return value will be etc etc. Just don&rsquo;t forget to &ldquo;require &lsquo;pry&rsquo;&rdquo; at the top of your code!!</p>

<hr />

<p style="text-align:center;"> <strong> www.Ruby-Doc.org </strong></p>

<p>Last but certainly not least is www.Ruby-Doc.org which is a treasure trove of information on all things Ruby. Need information on the return value of a method on the string class? Looking to learn how .collect works on an array?? This is the place to go!</p>

<p style="text-align:center;"> <img src="https://raw.githubusercontent.com/brianneking86/brianneking86.github.io/source/source/images/string.png" title="string" alt="alt text" />  <img src="https://raw.githubusercontent.com/brianneking86/brianneking86.github.io/source/source/images/array.png" title="array" alt="alt text" /></p>

<p style="text-align:center;"> <img src="https://raw.githubusercontent.com/brianneking86/brianneking86.github.io/source/source/images/hash.png" title="hash" alt="alt text" />  <img src="https://raw.githubusercontent.com/brianneking86/brianneking86.github.io/source/source/images/enumerable.png" title="enumerable" alt="alt text" /></p>

<p>Shown above are clips from the string, array, hash and enumerable pages that tell you the parent class, its specific methods, included modules, etc. Each method listed has a section showing its specific syntax, which arguments are required or optional, its return value, and some text describing how it works. I&rsquo;ve referenced these pages while writing code so many times that I made bookmarks to them for easy access. :)</p>

<hr />

<p>I know over my next 10 weeks at Flatiron I&rsquo;ll find more tools to add to my list of saviors but these three will always be there for me and anyone else struggling through learning Ruby!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[My First Post on Octopress]]></title>
    <link href="http://brianneking86.github.io/blog/2014/10/14/my-first-post-on-octopress/"/>
    <updated>2014-10-14T15:18:29-04:00</updated>
    <id>http://brianneking86.github.io/blog/2014/10/14/my-first-post-on-octopress</id>
    <content type="html"><![CDATA[<p>&ldquo;Hello, World&rdquo;</p>
]]></content>
  </entry>
  
</feed>
